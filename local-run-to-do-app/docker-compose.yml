services:

  postgres:
    container_name: to-do-app-postgres
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: password2
      POSTGRES_USER: postgres
      POSTGRES_DB: to-do-app-db
    ports:
      - "5432:5432"
    volumes:
      - to-do-app-data:/var/lib/postgresql/data

  redis:
    container_name: to-do-app-redis
    image: redis:8.2.1
    ports:
      - "9988:6379"

  zookeeper:
    container_name: to-do-app-zookeeper
    image: confluentinc/cp-zookeeper:7.9.2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: to-do-app-kafka
    image: confluentinc/cp-kafka:7.4.1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper

  backend:
    container_name: to-do-app-be
    image: to-do-app:latest
    build:
      context: ..
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/to-do-app-db
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_PROFILES_ACTIVE: local
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    profiles:
      - backend

volumes:
  to-do-app-data:
    driver: local